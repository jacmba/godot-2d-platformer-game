name: "godot-ci export"
on: push

env:
  GODOT_VERSION: 4.1.1
  EXPORT_NAME: slime-squash
  ITCH_IO_GAME: jacmba/slime-squash
  
jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Run tests
        run: |
          godot --headless --debug-collisions --path $(pwd) -d -s addons/gut/gut_cmdln.gd -gconfig=.gut_editor_config.json
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless -v --export-release "Windows Desktop" build/windows/${EXPORT_NAME}.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Run tests
        run: |
          godot --headless --debug-collisions --path $(pwd) -d -s addons/gut/gut_cmdln.gd -gconfig=.gut_editor_config.json
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless -v --export-release "Linux/X11" build/linux/${EXPORT_NAME}.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Run tests
        run: |
          godot --headless --debug-collisions --path $(pwd) -d -s addons/gut/gut_cmdln.gd -gconfig=.gut_editor_config.json
      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot --headless -v --export-release "Web" build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      - name: Publish to Itch.IO
        run: |
          apt update && apt upgrade -y && apt install curl -y
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          chmod +x butler
          alias butler=$(pwd)/butler
          butler -v
          butler login
          butler push build/web ${ITCH_IO_GAME}:web

      #- name: Install rsync ðŸ“š
      #  run: |
      #    apt-get update && apt-get install -y rsync
      #- name: Deploy to GitHub Pages ðŸš€
      #  uses: JamesIves/github-pages-deploy-action@releases/v4
      #  with:
      #    branch: gh-pages  The branch the action should deploy to.
      #    folder: build/web  The folder the action should deploy.

  export-mac:
    name: Mac Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Run tests
        run: |
          godot --headless --debug-collisions --path $(pwd) -d -s addons/gut/gut_cmdln.gd -gconfig=.gut_editor_config.json
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          godot --headless -v --export-release "macOS" build/mac/${EXPORT_NAME}.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/mac